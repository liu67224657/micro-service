#!/usr/bin/env groovy

node {

    try {
        stage('checkout') {
            checkout scm
        }

        stage('check java') {
            sh "java -version"
        }
        def pom
        def mavenHome = "/home/td_java/apache-maven-3.3.9/bin"
        stage('clean message-service') {
            dir("./message-service") {
                sh "${mavenHome}/mvn clean"
                pom = readMavenPom file: 'pom.xml'
                print " current version: ${pom.version}"
            }

        }

        stage('packaging message-service') {
            dir("./message-service") {
                echo "****** start mvn package message-service ******"
                sh "${mavenHome}/mvn package -Pprod -DskipTests"
                archiveArtifacts artifacts: '**/target/*.war', fingerprint: true
            }
        }

        def dockerImage
        stage('build docker') {
            dir("./message-service") {
                echo "****** start build docker image for message-service *****"
                sh "cp -R src/main/docker target/"
                sh "cp target/*.war target/docker/"
                dockerImage = docker.build("enjoyf/message-service-alpha:${pom.version}", 'target/docker')
            }
        }

        stage('publish docker') {
            docker.withRegistry('http://172.16.78.45:5000/') {
                dockerImage.push()
                dockerImage.push 'latest'
            }
        }

        stage("start docker") {
            echo "******* start docker container ********"
            dir("./message-service/target/docker") {
                sh "chmod +x stackDeployToDocker.sh"
                sh "./stackDeployToDocker.sh alpha"
            }
        }

        stage('Cleanup ') {
            dir("./message-service/target/docker") {
                echo '****** cleanup none docker images ***********'
                sh "chmod +x cleanUpImages.sh"
                sh "./cleanUpImages.sh"

//            mail body: 'message-service project build and deploy successful',
//                 from: 'xxxx@yyyyy.com',
//                 replyTo: 'xxxx@yyyy.com',
//                 subject: 'message-service project build and deploy successful',
//                 to: 'yyyyy@yyyy.com'
            }
        }

    }catch (err) {

        echo " message-service project build and deploy fails "

//        mail body: "project build error is here: ${env.BUILD_URL}" ,
//            from: 'xxxx@yyyy.com',
//            replyTo: 'yyyy@yyyy.com',
//            subject: 'project build failed',
//            to: 'zzzz@yyyyy.com'

        throw err
    }
}

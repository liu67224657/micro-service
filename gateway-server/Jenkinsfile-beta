#!/usr/bin/env groovy

node {

    try {
        stage('checkout') {
            checkout scm
        }

        stage('check java') {
            sh "java -version"
        }
        def pom
        def mavenHome = "/home/td_java/apache-maven-3.3.9/bin"
        stage('clean gateway-server') {
            dir("./gateway-server") {
                sh "pwd"
                sh "${mavenHome}/mvn clean"
                pom = readMavenPom file: 'pom.xml'
                print " current version: ${pom.version}"
            }
        }

        stage('packaging gateway-server') {
            dir("./gateway-server") {
                echo "****** start mvn package gateway-server ******"
                 sh "PHANTOMJS_CDNURL=https://npm.taobao.org/dist/phantomjs /bin/npm install phantomjs --registry=https://registry.npm.taobao.org --no-proxy"
                 sh "${mavenHome}/mvn package -Pprod -DskipTests"
                archiveArtifacts artifacts: '**/target/*.war', fingerprint: true
            }
        }

        def dockerImage
        stage('build docker') {
            dir("./gateway-server") {
                echo "****** start build docker image for gateway-server *****"
                sh "cp -R src/main/docker target/"
                sh "cp target/*.war target/docker/"
                dockerImage = docker.build("joyme_docker/gateway-server-beta:${pom.version}", 'target/docker')
            }
        }

        stage('publish docker') {
            docker.withRegistry('http://registry.cn-beijing.aliyuncs.com/') {
                sh "sudo docker login --username=to_group@staff.joyme.com --password=123.abc  registry.cn-beijing.aliyuncs.com"
                dockerImage.push()
                dockerImage.push 'latest'
            }
        }

//        stage('Cleanup ') {
//            dir("./gateway-server/target/docker") {
//                echo 'cleanup none docker images'
//                sh "chmod +x cleanUpImages.sh"
//                sh "./cleanUpImages.sh"
//            }
//        }

    }catch (err) {

        echo " gateway-server project build and deploy fails "

//        mail body: "project build error is here: ${env.BUILD_URL}" ,
//            from: 'xxxx@yyyy.com',
//            replyTo: 'yyyy@yyyy.com',
//            subject: 'project build failed',
//            to: 'zzzz@yyyyy.com'

        throw err
    }
}

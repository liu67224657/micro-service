#!/usr/bin/env groovy

node {

    try {
        stage('checkout') {
            checkout scm
        }

        stage('check java') {
            sh "java -version"
        }
        def pom
        def mavenHome = "/home/td_java/apache-maven-3.3.9/bin"
        stage('clean eureka-config-server') {
            dir("./eureka-config-server"){
                sh "${mavenHome}/mvn -v"
                sh "${mavenHome}/mvn clean"
                pom = readMavenPom file: 'pom.xml'
                print " current version: ${pom.version}"
            }
        }

//    stage('backend tests') {
//        try {
//            sh "mvn test"
//        } catch(err) {
//            throw err
//        } finally {
//            junit '**/target/surefire-reports/TEST-*.xml'
//        }
//    }

        stage('packaging eureka-config-server') {
            dir("./eureka-config-server") {
                echo "****** start mvn package eureka-config-server ******"
                 sh "PHANTOMJS_CDNURL=https://npm.taobao.org/dist/phantomjs /bin/npm install phantomjs --registry=https://registry.npm.taobao.org --no-proxy"
                 sh "${mavenHome}/mvn package -Pprod -DskipTests"
                archiveArtifacts artifacts: '**/target/*.war', fingerprint: true
            }
        }

        def dockerImage
        stage('build docker') {
            dir("./eureka-config-server") {
                echo "****** start build docker image for eureka-config-server *****"
                sh "cp -R src/main/docker target/"
                sh "cp target/*.war target/docker/"
                dockerImage = docker.build("enjoyf/eureka-config-server-devtest:${pom.version}", 'target/docker')
            }
        }

        stage('publish docker') {
            docker.withRegistry('http://172.16.78.45:5000/') {
                dockerImage.push()
                dockerImage.push 'latest'
            }
        }

        stage("start docker") {
            echo " start docker container "
            dir("./eureka-config-server/target/docker") {
//                sh "chmod +x deployToDocker.sh"
                sh "chmod +x stackDeployToDocker.sh"
                sh "./stackDeployToDocker.sh devtest"
            }
        }

        stage('Cleanup ') {
            dir("./eureka-config-server/target/docker") {
                echo 'cleanup none docker images'
                sh "chmod +x cleanUpImages.sh"
                sh "./cleanUpImages.sh"

//            mail body: 'eureka-config-server project build and deploy successful',
//                 from: 'xxxx@yyyyy.com',
//                 replyTo: 'xxxx@yyyy.com',
//                 subject: 'eureka-config-server project build and deploy successful',
//                 to: 'yyyyy@yyyy.com'
            }
        }

    }catch (err) {

        echo " eureka-config-server project build and deploy fails "

//        mail body: "project build error is here: ${env.BUILD_URL}" ,
//            from: 'xxxx@yyyy.com',
//            replyTo: 'yyyy@yyyy.com',
//            subject: 'project build failed',
//            to: 'zzzz@yyyyy.com'

        throw err
    }
}

/*
 * userservice API
 * userservice API documentation
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.enjoyf.platform.userservice.client.api;

import com.enjoyf.platform.userservice.client.ApiException;
import com.enjoyf.platform.userservice.client.model.Player;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PlayerResourceApi
 */
@Ignore
public class PlayerResourceApiTest {

    private final PlayerResourceApi api = new PlayerResourceApi();

    
    /**
     * createPlayer
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createPlayerUsingPOSTTest() throws ApiException {
        Player player = null;
        Player response = api.createPlayerUsingPOST(player);

        // TODO: test validations
    }
    
    /**
     * deletePlayer
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deletePlayerUsingDELETETest() throws ApiException {
        Long id = null;
        api.deletePlayerUsingDELETE(id);

        // TODO: test validations
    }
    
    /**
     * getAllPlayersByProfileNos
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllPlayersByProfileNosUsingGETTest() throws ApiException {
        List<String> profileNos = null;
        List<Player> response = api.getAllPlayersByProfileNosUsingGET(profileNos);

        // TODO: test validations
    }
    
    /**
     * getAllPlayers
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllPlayersUsingGETTest() throws ApiException {
        Integer page = null;
        Integer size = null;
        List<String> sort = null;
        List<Player> response = api.getAllPlayersUsingGET(page, size, sort);

        // TODO: test validations
    }
    
    /**
     * getPlayerByProfileNo
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPlayerByProfileNoUsingGETTest() throws ApiException {
        String profileNo = null;
        Player response = api.getPlayerByProfileNoUsingGET(profileNo);

        // TODO: test validations
    }
    
    /**
     * getPlayer
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPlayerUsingGETTest() throws ApiException {
        Long id = null;
        Player response = api.getPlayerUsingGET(id);

        // TODO: test validations
    }
    
    /**
     * updatePlayer
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updatePlayerUsingPUTTest() throws ApiException {
        Player player = null;
        Player response = api.updatePlayerUsingPUT(player);

        // TODO: test validations
    }
    
}

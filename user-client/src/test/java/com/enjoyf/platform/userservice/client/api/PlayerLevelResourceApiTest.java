/*
 * userservice API
 * userservice API documentation
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.enjoyf.platform.userservice.client.api;

import com.enjoyf.platform.userservice.client.ApiException;
import com.enjoyf.platform.userservice.client.model.PlayerLevel;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PlayerLevelResourceApi
 */
@Ignore
public class PlayerLevelResourceApiTest {

    private final PlayerLevelResourceApi api = new PlayerLevelResourceApi();

    
    /**
     * createPlayerLevel
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createPlayerLevelUsingPOSTTest() throws ApiException {
        PlayerLevel playerLevel = null;
        PlayerLevel response = api.createPlayerLevelUsingPOST(playerLevel);

        // TODO: test validations
    }
    
    /**
     * deletePlayerLevel
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deletePlayerLevelUsingDELETETest() throws ApiException {
        Long id = null;
        api.deletePlayerLevelUsingDELETE(id);

        // TODO: test validations
    }
    
    /**
     * getAllPlayerLevels
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllPlayerLevelsUsingGETTest() throws ApiException {
        List<PlayerLevel> response = api.getAllPlayerLevelsUsingGET();

        // TODO: test validations
    }
    
    /**
     * getPlayerLevel
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPlayerLevelUsingGETTest() throws ApiException {
        Long id = null;
        PlayerLevel response = api.getPlayerLevelUsingGET(id);

        // TODO: test validations
    }
    
    /**
     * updatePlayerLevel
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updatePlayerLevelUsingPUTTest() throws ApiException {
        PlayerLevel playerLevel = null;
        PlayerLevel response = api.updatePlayerLevelUsingPUT(playerLevel);

        // TODO: test validations
    }
    
}
